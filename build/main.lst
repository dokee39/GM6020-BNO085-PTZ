ARM GAS  /tmp/ccQMMJ7a.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.global	__aeabi_dmul
  21              		.global	__aeabi_dadd
  22              		.section	.text.rc_norm,"ax",%progbits
  23              		.align	1
  24              		.global	rc_norm
  25              		.syntax unified
  26              		.thumb
  27              		.thumb_func
  29              	rc_norm:
  30              	.LVL0:
  31              	.LFB135:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.</center></h2>
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****  * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****  * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****  *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****  *
  17:Core/Src/main.c ****  ******************************************************************************
  18:Core/Src/main.c ****  */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "can.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** #include "i2c.h"
  25:Core/Src/main.c **** #include "pid_control_tuning.h"
  26:Core/Src/main.c **** #include "usart.h"
  27:Core/Src/main.c **** #include "usb_device.h"
ARM GAS  /tmp/ccQMMJ7a.s 			page 2


  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  31:Core/Src/main.c **** #include "bsp_can.h"
  32:Core/Src/main.c **** #include "com.h"
  33:Core/Src/main.c **** #include "package.h"
  34:Core/Src/main.c **** #include "pid.h"
  35:Core/Src/main.c **** #include "math.h"
  36:Core/Src/main.c **** #include "usbd_cdc_if.h"
  37:Core/Src/main.c **** #include <stdio.h>
  38:Core/Src/main.c **** #include <string.h>
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END Includes */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  44:Core/Src/main.c **** #define printf(...) cprintf(&huart1, __VA_ARGS__)
  45:Core/Src/main.c **** /* USER CODE END PTD */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  48:Core/Src/main.c **** /* USER CODE BEGIN PD */
  49:Core/Src/main.c **** /* USER CODE END PD */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  52:Core/Src/main.c **** /* USER CODE BEGIN PM */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PM */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE BEGIN PV */
  59:Core/Src/main.c **** typedef struct Vec3d {
  60:Core/Src/main.c ****     double x, y, z;
  61:Core/Src/main.c **** } Vec3d;
  62:Core/Src/main.c **** /* USER CODE END PV */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  65:Core/Src/main.c **** void SystemClock_Config(void);
  66:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  67:Core/Src/main.c **** /* USER CODE END PFP */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  70:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  71:Core/Src/main.c **** uint8_t ReceiveBuffer[6] = {0}; // IIC接收缓冲区
  72:Core/Src/main.c **** char buf_r[256] = {0};
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** double rc_norm(const Vec3d *r) {
  32              		.loc 1 74 32 view -0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36              		.loc 1 74 32 is_stmt 0 view .LVU1
  37 0000 D0B5     		push	{r4, r6, r7, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 16
  40              		.cfi_offset 4, -16
  41              		.cfi_offset 6, -12
ARM GAS  /tmp/ccQMMJ7a.s 			page 3


  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 0446     		mov	r4, r0
  75:Core/Src/main.c ****     double ans = (r -> x * r -> x) + (r -> y * r -> y) + (r -> z * r -> z);
  45              		.loc 1 75 5 is_stmt 1 view .LVU2
  46              		.loc 1 75 21 is_stmt 0 view .LVU3
  47 0004 D0E90001 		ldrd	r0, [r0]
  48              	.LVL1:
  49              		.loc 1 75 26 view .LVU4
  50 0008 0246     		mov	r2, r0
  51 000a 0B46     		mov	r3, r1
  52 000c FFF7FEFF 		bl	__aeabi_dmul
  53              	.LVL2:
  54 0010 0646     		mov	r6, r0
  55 0012 0F46     		mov	r7, r1
  56              		.loc 1 75 41 view .LVU5
  57 0014 D4E90201 		ldrd	r0, [r4, #8]
  58              		.loc 1 75 46 view .LVU6
  59 0018 0246     		mov	r2, r0
  60 001a 0B46     		mov	r3, r1
  61 001c FFF7FEFF 		bl	__aeabi_dmul
  62              	.LVL3:
  63 0020 0246     		mov	r2, r0
  64 0022 0B46     		mov	r3, r1
  65              		.loc 1 75 36 view .LVU7
  66 0024 3046     		mov	r0, r6
  67 0026 3946     		mov	r1, r7
  68 0028 FFF7FEFF 		bl	__aeabi_dadd
  69              	.LVL4:
  70 002c 0646     		mov	r6, r0
  71 002e 0F46     		mov	r7, r1
  72              		.loc 1 75 61 view .LVU8
  73 0030 D4E90401 		ldrd	r0, [r4, #16]
  74              		.loc 1 75 66 view .LVU9
  75 0034 0246     		mov	r2, r0
  76 0036 0B46     		mov	r3, r1
  77 0038 FFF7FEFF 		bl	__aeabi_dmul
  78              	.LVL5:
  79 003c 0246     		mov	r2, r0
  80 003e 0B46     		mov	r3, r1
  81              		.loc 1 75 12 view .LVU10
  82 0040 3046     		mov	r0, r6
  83 0042 3946     		mov	r1, r7
  84 0044 FFF7FEFF 		bl	__aeabi_dadd
  85              	.LVL6:
  76:Core/Src/main.c ****     return sqrt(ans);
  86              		.loc 1 76 5 is_stmt 1 view .LVU11
  87              		.loc 1 76 12 is_stmt 0 view .LVU12
  88 0048 41EC100B 		vmov	d0, r0, r1
  89 004c FFF7FEFF 		bl	sqrt
  90              	.LVL7:
  77:Core/Src/main.c **** }
  91              		.loc 1 77 1 view .LVU13
  92 0050 D0BD     		pop	{r4, r6, r7, pc}
  93              		.loc 1 77 1 view .LVU14
  94              		.cfi_endproc
  95              	.LFE135:
ARM GAS  /tmp/ccQMMJ7a.s 			page 4


  97              		.section	.text.rc_mul,"ax",%progbits
  98              		.align	1
  99              		.global	rc_mul
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
 104              	rc_mul:
 105              	.LVL8:
 106              	.LFB136:
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** void rc_mul(const double a, const Vec3d *b, Vec3d *ans) {
 107              		.loc 1 79 57 is_stmt 1 view -0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              		.loc 1 79 57 is_stmt 0 view .LVU16
 112 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 113              	.LCFI1:
 114              		.cfi_def_cfa_offset 24
 115              		.cfi_offset 3, -24
 116              		.cfi_offset 4, -20
 117              		.cfi_offset 5, -16
 118              		.cfi_offset 6, -12
 119              		.cfi_offset 7, -8
 120              		.cfi_offset 14, -4
 121 0002 57EC106B 		vmov	r6, r7, d0
 122 0006 0546     		mov	r5, r0
 123 0008 0C46     		mov	r4, r1
  80:Core/Src/main.c ****     ans -> x = a * b -> x;
 124              		.loc 1 80 5 is_stmt 1 view .LVU17
 125              		.loc 1 80 18 is_stmt 0 view .LVU18
 126 000a 3246     		mov	r2, r6
 127 000c 3B46     		mov	r3, r7
 128 000e D0E90001 		ldrd	r0, [r0]
 129              	.LVL9:
 130              		.loc 1 80 18 view .LVU19
 131 0012 FFF7FEFF 		bl	__aeabi_dmul
 132              	.LVL10:
 133              		.loc 1 80 14 view .LVU20
 134 0016 C4E90001 		strd	r0, [r4]
  81:Core/Src/main.c ****     ans -> y = a * b -> y;
 135              		.loc 1 81 5 is_stmt 1 view .LVU21
 136              		.loc 1 81 18 is_stmt 0 view .LVU22
 137 001a 3246     		mov	r2, r6
 138 001c 3B46     		mov	r3, r7
 139 001e D5E90201 		ldrd	r0, [r5, #8]
 140 0022 FFF7FEFF 		bl	__aeabi_dmul
 141              	.LVL11:
 142              		.loc 1 81 14 view .LVU23
 143 0026 C4E90201 		strd	r0, [r4, #8]
  82:Core/Src/main.c ****     ans -> z = a * b -> z;
 144              		.loc 1 82 5 is_stmt 1 view .LVU24
 145              		.loc 1 82 18 is_stmt 0 view .LVU25
 146 002a 3246     		mov	r2, r6
 147 002c 3B46     		mov	r3, r7
 148 002e D5E90401 		ldrd	r0, [r5, #16]
 149 0032 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /tmp/ccQMMJ7a.s 			page 5


 150              	.LVL12:
 151              		.loc 1 82 14 view .LVU26
 152 0036 C4E90401 		strd	r0, [r4, #16]
  83:Core/Src/main.c **** }
 153              		.loc 1 83 1 view .LVU27
 154 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 155              		.loc 1 83 1 view .LVU28
 156              		.cfi_endproc
 157              	.LFE136:
 159              		.section	.text.fputc,"ax",%progbits
 160              		.align	1
 161              		.global	fputc
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 166              	fputc:
 167              	.LVL13:
 168              	.LFB139:
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /* USER CODE END 0 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /**
  88:Core/Src/main.c ****  * @brief  The application entry point.
  89:Core/Src/main.c ****  * @retval int
  90:Core/Src/main.c ****  */
  91:Core/Src/main.c **** int main(void) {
  92:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  93:Core/Src/main.c ****   /* USER CODE END 1 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick.
  98:Core/Src/main.c ****    */
  99:Core/Src/main.c ****   HAL_Init();
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE END Init */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Configure the system clock */
 106:Core/Src/main.c ****   SystemClock_Config();
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE END SysInit */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Initialize all configured peripherals */
 113:Core/Src/main.c ****   MX_GPIO_Init();
 114:Core/Src/main.c ****   MX_CAN1_Init();
 115:Core/Src/main.c ****   MX_I2C2_Init();
 116:Core/Src/main.c ****   MX_USART1_UART_Init();
 117:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 118:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 119:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   HAL_CAN_Start(&hcan1);
 122:Core/Src/main.c ****   my_can_filter_init_recv_all(&hcan1);
ARM GAS  /tmp/ccQMMJ7a.s 			page 6


 123:Core/Src/main.c ****   HAL_CAN_ActivateNotification(&hcan1,
 124:Core/Src/main.c ****                                CAN_IT_RX_FIFO0_MSG_PENDING); // enable IT
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* USER CODE END 2 */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* Infinite loop */
 129:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 130:Core/Src/main.c ****   // YAW轴PID
 131:Core/Src/main.c ****   pid_init(&motor_pid[0]); // 速度环
 132:Core/Src/main.c ****   motor_pid[0].f_param_init(&motor_pid[0], PID_Speed, CURRENT_LIMIT, 5000, 0, 0,
 133:Core/Src/main.c ****                             0, 8000, 61.4656753, 0.6697404, 0);
 134:Core/Src/main.c ****   pid_init(&angle_pid[0]); // 位置环（相对位置）
 135:Core/Src/main.c ****   angle_pid[0].f_param_init(&angle_pid[0], PID_Speed, 300, 300, 0, 0, 4000, 0,
 136:Core/Src/main.c ****                             1.3713, 0.00495369, 94.8474 * 0);
 137:Core/Src/main.c ****   pid_init(&abs_pid[0]); // 位置环（自稳）
 138:Core/Src/main.c ****   abs_pid[0].f_param_init(&abs_pid[0], PID_Speed, 300, 300, 0, 0, 4000, 0, -0.9,
 139:Core/Src/main.c ****                           -0.003, -3);
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   // Pitch轴PID
 142:Core/Src/main.c ****   pid_init(&motor_pid[1]); // 速度环
 143:Core/Src/main.c ****   motor_pid[1].f_param_init(&motor_pid[1], PID_Speed, CURRENT_LIMIT, 5000, 0, 0,
 144:Core/Src/main.c ****                             0, 8000, 4.01239768, 3.0348503, 0);
 145:Core/Src/main.c ****   pid_init(&angle_pid[1]); // 位置环（相对位置）
 146:Core/Src/main.c ****   angle_pid[1].f_param_init(&angle_pid[1], PID_Speed, 500, 500, 0, 0, 4000, 0,
 147:Core/Src/main.c ****                             1.27137, 0.01084, 27.877753 * 0.4);
 148:Core/Src/main.c ****   pid_init(&abs_pid[1]); // 位置环（自稳）
 149:Core/Src/main.c ****   abs_pid[1].f_param_init(&abs_pid[1], PID_Speed, 300, 300, 0, 0, 4000, 0, 0.5,
 150:Core/Src/main.c ****                           0, 10);
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   printf("--------------init--------------\n");
 153:Core/Src/main.c ****   HAL_I2C_Slave_Receive_IT(&hi2c2, ReceiveBuffer, sizeof(ReceiveBuffer));
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   SendPacket sp;
 156:Core/Src/main.c ****   sp.header = 0x5a;
 157:Core/Src/main.c ****   sp.detect_color = 1;
 158:Core/Src/main.c ****   sp.reset_tracker = 0;
 159:Core/Src/main.c ****   sp.checksum = 0;
 160:Core/Src/main.c ****   ReceivePacket rp = {0};
 161:Core/Src/main.c ****   uint32_t size = SEND_PKG_SIZE;
 162:Core/Src/main.c **** 	Vec3d aim_pos = {0};
 163:Core/Src/main.c **** 	float yaw,pitch;
 164:Core/Src/main.c **** 	int nan_f = 0;
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   while (1) {
 167:Core/Src/main.c ****     /* USER CODE END WHILE */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 170:Core/Src/main.c ****     USBD_Interface_fops_FS.Receive((uint8_t *)buf_r, &size);
 171:Core/Src/main.c ****     fromVector((uint8_t *)buf_r, &rp);
 172:Core/Src/main.c **** 		aim_pos.x = rp.x;
 173:Core/Src/main.c **** 		aim_pos.y = rp.y; 
 174:Core/Src/main.c **** 		aim_pos.z = rp.z;
 175:Core/Src/main.c **** 		float l = rc_norm(&aim_pos);
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** 		yaw = atan(aim_pos.y/aim_pos.x);//偏航角
 178:Core/Src/main.c **** 		pitch = asin(aim_pos.z/l);//俯仰角
 179:Core/Src/main.c ****     float x = 1.0;
ARM GAS  /tmp/ccQMMJ7a.s 			page 7


 180:Core/Src/main.c ****     //printf("%d/1000\n", (int)x*1000);
 181:Core/Src/main.c ****     
 182:Core/Src/main.c ****     printf("aim_x:%d/1000, aim_y:%d/1000, aim_z:%d/1000, yaw:%d/1000, pitch:%d/1000 \n", 
 183:Core/Src/main.c ****                    (int)aim_pos.x*1000, (int)aim_pos.y*1000, (int)aim_pos.z*1000, (int)yaw*1000, (i
 184:Core/Src/main.c **** 
 185:Core/Src/main.c **** 		sp.yaw = M_PI * (-IMU_Angle[2]+90)/180;
 186:Core/Src/main.c **** 		sp.pitch = M_PI * (-IMU_Angle[0] + 180)/180;
 187:Core/Src/main.c **** 		sp.roll = M_PI * IMU_Angle[1]/180;
 188:Core/Src/main.c ****     CDC_Transmit_FS((uint8_t *)&sp, sizeof(struct SendPacket));
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** 		//printf("yaw: %d/1000\n",(int)(yaw*1000));
 191:Core/Src/main.c **** 		//printf("ok\n");
 192:Core/Src/main.c ****     //if(isnan(yaw)){
 193:Core/Src/main.c **** 				//printf("NANANANAN\n");
 194:Core/Src/main.c **** 		//}
 195:Core/Src/main.c **** 		if(ABS_Gimbal_angle[0] >= 8191)
 196:Core/Src/main.c **** 				ABS_Gimbal_angle[0] = 0;
 197:Core/Src/main.c **** 		else if(ABS_Gimbal_angle <= 0)
 198:Core/Src/main.c **** 				ABS_Gimbal_angle[0] = 8191;
 199:Core/Src/main.c **** 		else if(isnan(ABS_Gimbal_angle[0]) && nan_f == 0){
 200:Core/Src/main.c **** 				nan_f = 1;
 201:Core/Src/main.c **** 				ABS_Gimbal_angle[0] = 7500;
 202:Core/Src/main.c **** 		} else nan_f =0;
 203:Core/Src/main.c **** 
 204:Core/Src/main.c **** 		if(nan_f == 1){
 205:Core/Src/main.c **** 				ABS_Gimbal_angle[0]= yaw /(2*M_PI) *8192;
 206:Core/Src/main.c **** 		}
 207:Core/Src/main.c **** 
 208:Core/Src/main.c **** 		//ABS_Gimbal_angle[0] -= (yaw+0.21);
 209:Core/Src/main.c **** 				/**ABS_Gimbal_angle[0] += ((yaw+0.21) * 100);*/
 210:Core/Src/main.c **** 				/**ABS_Gimbal_angle[1] -=  pitch * 10;*/
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   Abs_angle_control_loop();
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****     /*Debug*/
 215:Core/Src/main.c ****     if (false) {
 216:Core/Src/main.c ****       HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 217:Core/Src/main.c ****       HAL_Delay(100);
 218:Core/Src/main.c ****     }
 219:Core/Src/main.c ****     i++;
 220:Core/Src/main.c ****     j++;
 221:Core/Src/main.c ****   }
 222:Core/Src/main.c ****   /* USER CODE END 3 */
 223:Core/Src/main.c **** }
 224:Core/Src/main.c **** 
 225:Core/Src/main.c **** /**
 226:Core/Src/main.c ****  * @brief System Clock Configuration
 227:Core/Src/main.c ****  * @retval None
 228:Core/Src/main.c ****  */
 229:Core/Src/main.c **** void SystemClock_Config(void) {
 230:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 231:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 234:Core/Src/main.c ****    */
 235:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 236:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
ARM GAS  /tmp/ccQMMJ7a.s 			page 8


 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 239:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 240:Core/Src/main.c ****    */
 241:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 242:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 243:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 244:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 245:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 6;
 246:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 247:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 248:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 249:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 250:Core/Src/main.c ****     Error_Handler();
 251:Core/Src/main.c ****   }
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 254:Core/Src/main.c ****    */
 255:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK |
 256:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 257:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 258:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 259:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 260:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK) {
 263:Core/Src/main.c ****     Error_Handler();
 264:Core/Src/main.c ****   }
 265:Core/Src/main.c **** }
 266:Core/Src/main.c **** 
 267:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 268:Core/Src/main.c **** 
 269:Core/Src/main.c **** int fputc(int ch, FILE *f) {
 169              		.loc 1 269 28 is_stmt 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 8
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		.loc 1 269 28 is_stmt 0 view .LVU30
 174 0000 00B5     		push	{lr}
 175              	.LCFI2:
 176              		.cfi_def_cfa_offset 4
 177              		.cfi_offset 14, -4
 178 0002 83B0     		sub	sp, sp, #12
 179              	.LCFI3:
 180              		.cfi_def_cfa_offset 16
 181 0004 0190     		str	r0, [sp, #4]
 270:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, 0xffff);
 182              		.loc 1 270 3 is_stmt 1 view .LVU31
 183 0006 4FF6FF73 		movw	r3, #65535
 184 000a 0122     		movs	r2, #1
 185 000c 01A9     		add	r1, sp, #4
 186              	.LVL14:
 187              		.loc 1 270 3 is_stmt 0 view .LVU32
 188 000e 0348     		ldr	r0, .L7
 189              	.LVL15:
 190              		.loc 1 270 3 view .LVU33
 191 0010 FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  /tmp/ccQMMJ7a.s 			page 9


 192              	.LVL16:
 271:Core/Src/main.c ****   return ch;
 193              		.loc 1 271 3 is_stmt 1 view .LVU34
 272:Core/Src/main.c **** }
 194              		.loc 1 272 1 is_stmt 0 view .LVU35
 195 0014 0198     		ldr	r0, [sp, #4]
 196 0016 03B0     		add	sp, sp, #12
 197              	.LCFI4:
 198              		.cfi_def_cfa_offset 4
 199              		@ sp needed
 200 0018 5DF804FB 		ldr	pc, [sp], #4
 201              	.L8:
 202              		.align	2
 203              	.L7:
 204 001c 00000000 		.word	huart1
 205              		.cfi_endproc
 206              	.LFE139:
 208              		.section	.text.fgetc,"ax",%progbits
 209              		.align	1
 210              		.global	fgetc
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 215              	fgetc:
 216              	.LVL17:
 217              	.LFB140:
 273:Core/Src/main.c **** int fgetc(FILE *f) {
 218              		.loc 1 273 20 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 8
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		.loc 1 273 20 is_stmt 0 view .LVU37
 223 0000 00B5     		push	{lr}
 224              	.LCFI5:
 225              		.cfi_def_cfa_offset 4
 226              		.cfi_offset 14, -4
 227 0002 83B0     		sub	sp, sp, #12
 228              	.LCFI6:
 229              		.cfi_def_cfa_offset 16
 274:Core/Src/main.c ****   uint8_t ch = 0;
 230              		.loc 1 274 3 is_stmt 1 view .LVU38
 231              		.loc 1 274 11 is_stmt 0 view .LVU39
 232 0004 0023     		movs	r3, #0
 233 0006 8DF80730 		strb	r3, [sp, #7]
 275:Core/Src/main.c ****   HAL_UART_Receive(&huart1, &ch, 1, 0xffff);
 234              		.loc 1 275 3 is_stmt 1 view .LVU40
 235 000a 4FF6FF73 		movw	r3, #65535
 236 000e 0122     		movs	r2, #1
 237 0010 0DF10701 		add	r1, sp, #7
 238 0014 0348     		ldr	r0, .L11
 239              	.LVL18:
 240              		.loc 1 275 3 is_stmt 0 view .LVU41
 241 0016 FFF7FEFF 		bl	HAL_UART_Receive
 242              	.LVL19:
 276:Core/Src/main.c ****   return ch;
 243              		.loc 1 276 3 is_stmt 1 view .LVU42
 277:Core/Src/main.c **** }
ARM GAS  /tmp/ccQMMJ7a.s 			page 10


 244              		.loc 1 277 1 is_stmt 0 view .LVU43
 245 001a 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 246 001e 03B0     		add	sp, sp, #12
 247              	.LCFI7:
 248              		.cfi_def_cfa_offset 4
 249              		@ sp needed
 250 0020 5DF804FB 		ldr	pc, [sp], #4
 251              	.L12:
 252              		.align	2
 253              	.L11:
 254 0024 00000000 		.word	huart1
 255              		.cfi_endproc
 256              	.LFE140:
 258              		.section	.text.HAL_I2C_SlaveRxCpltCallback,"ax",%progbits
 259              		.align	1
 260              		.global	HAL_I2C_SlaveRxCpltCallback
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 265              	HAL_I2C_SlaveRxCpltCallback:
 266              	.LVL20:
 267              	.LFB141:
 278:Core/Src/main.c **** 
 279:Core/Src/main.c **** void HAL_I2C_SlaveRxCpltCallback(I2C_HandleTypeDef *hi2c) {
 268              		.loc 1 279 59 is_stmt 1 view -0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 8
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              		.loc 1 279 59 is_stmt 0 view .LVU45
 273 0000 00B5     		push	{lr}
 274              	.LCFI8:
 275              		.cfi_def_cfa_offset 4
 276              		.cfi_offset 14, -4
 277 0002 83B0     		sub	sp, sp, #12
 278              	.LCFI9:
 279              		.cfi_def_cfa_offset 16
 280:Core/Src/main.c ****   // printf("data1 = %d\n", ReceiveBuffer[1]);
 281:Core/Src/main.c ****   uint8_t IMU_data[6] = {0};
 280              		.loc 1 281 3 is_stmt 1 view .LVU46
 281              		.loc 1 281 11 is_stmt 0 view .LVU47
 282 0004 0023     		movs	r3, #0
 283 0006 0093     		str	r3, [sp]
 284 0008 ADF80430 		strh	r3, [sp, #4]	@ movhi
 282:Core/Src/main.c ****   for (int i = 0; i < 6; i++) {
 285              		.loc 1 282 3 is_stmt 1 view .LVU48
 286              	.LBB4:
 287              		.loc 1 282 8 view .LVU49
 288              	.LVL21:
 289              		.loc 1 282 3 is_stmt 0 view .LVU50
 290 000c 07E0     		b	.L14
 291              	.LVL22:
 292              	.L15:
 283:Core/Src/main.c ****     IMU_data[i] = ReceiveBuffer[i];
 293              		.loc 1 283 5 is_stmt 1 view .LVU51
 294              		.loc 1 283 32 is_stmt 0 view .LVU52
 295 000e 244A     		ldr	r2, .L17
 296 0010 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccQMMJ7a.s 			page 11


 297              		.loc 1 283 17 view .LVU53
 298 0012 03F10802 		add	r2, r3, #8
 299 0016 6A44     		add	r2, sp, r2
 300 0018 02F8081C 		strb	r1, [r2, #-8]
 282:Core/Src/main.c ****   for (int i = 0; i < 6; i++) {
 301              		.loc 1 282 27 is_stmt 1 discriminator 3 view .LVU54
 302 001c 0133     		adds	r3, r3, #1
 303              	.LVL23:
 304              	.L14:
 282:Core/Src/main.c ****   for (int i = 0; i < 6; i++) {
 305              		.loc 1 282 21 discriminator 1 view .LVU55
 306 001e 052B     		cmp	r3, #5
 307 0020 F5DD     		ble	.L15
 308              	.LBE4:
 284:Core/Src/main.c ****   }
 285:Core/Src/main.c ****   IMU_Angle_Raw[0] = (int16_t)(IMU_data[0] << 8 | IMU_data[1]);
 309              		.loc 1 285 3 view .LVU56
 310              		.loc 1 285 40 is_stmt 0 view .LVU57
 311 0022 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 312              	.LVL24:
 313              		.loc 1 285 59 view .LVU58
 314 0026 9DF80110 		ldrb	r1, [sp, #1]	@ zero_extendqisi2
 315              		.loc 1 285 22 view .LVU59
 316 002a 41EA0321 		orr	r1, r1, r3, lsl #8
 317 002e 09B2     		sxth	r1, r1
 318              		.loc 1 285 20 view .LVU60
 319 0030 1C48     		ldr	r0, .L17+4
 320              	.LVL25:
 321              		.loc 1 285 20 view .LVU61
 322 0032 0180     		strh	r1, [r0]	@ movhi
 286:Core/Src/main.c ****   IMU_Angle_Raw[1] = (int16_t)(IMU_data[2] << 8 | IMU_data[3]);
 323              		.loc 1 286 3 is_stmt 1 view .LVU62
 324              		.loc 1 286 40 is_stmt 0 view .LVU63
 325 0034 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
 326              		.loc 1 286 59 view .LVU64
 327 0038 9DF80320 		ldrb	r2, [sp, #3]	@ zero_extendqisi2
 328              		.loc 1 286 22 view .LVU65
 329 003c 42EA0322 		orr	r2, r2, r3, lsl #8
 330 0040 12B2     		sxth	r2, r2
 331              		.loc 1 286 20 view .LVU66
 332 0042 4280     		strh	r2, [r0, #2]	@ movhi
 287:Core/Src/main.c ****   IMU_Angle_Raw[2] = (int16_t)(IMU_data[4] << 8 | IMU_data[5]);
 333              		.loc 1 287 3 is_stmt 1 view .LVU67
 334              		.loc 1 287 40 is_stmt 0 view .LVU68
 335 0044 9DF804C0 		ldrb	ip, [sp, #4]	@ zero_extendqisi2
 336              		.loc 1 287 59 view .LVU69
 337 0048 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 338              		.loc 1 287 22 view .LVU70
 339 004c 43EA0C23 		orr	r3, r3, ip, lsl #8
 340 0050 1BB2     		sxth	r3, r3
 341              		.loc 1 287 20 view .LVU71
 342 0052 8380     		strh	r3, [r0, #4]	@ movhi
 288:Core/Src/main.c ****   IMU_Angle[0] = (float)IMU_Angle_Raw[0] / 100;
 343              		.loc 1 288 3 is_stmt 1 view .LVU72
 344              		.loc 1 288 18 is_stmt 0 view .LVU73
 345 0054 07EE901A 		vmov	s15, r1	@ int
 346 0058 F8EEE77A 		vcvt.f32.s32	s15, s15
ARM GAS  /tmp/ccQMMJ7a.s 			page 12


 347              		.loc 1 288 42 view .LVU74
 348 005c 9FED127A 		vldr.32	s14, .L17+8
 349 0060 C7EE876A 		vdiv.f32	s13, s15, s14
 350              		.loc 1 288 16 view .LVU75
 351 0064 1149     		ldr	r1, .L17+12
 352 0066 C1ED006A 		vstr.32	s13, [r1]
 289:Core/Src/main.c ****   IMU_Angle[1] = (float)IMU_Angle_Raw[1] / 100;
 353              		.loc 1 289 3 is_stmt 1 view .LVU76
 354              		.loc 1 289 18 is_stmt 0 view .LVU77
 355 006a 07EE902A 		vmov	s15, r2	@ int
 356 006e F8EEE77A 		vcvt.f32.s32	s15, s15
 357              		.loc 1 289 42 view .LVU78
 358 0072 C7EE876A 		vdiv.f32	s13, s15, s14
 359              		.loc 1 289 16 view .LVU79
 360 0076 C1ED016A 		vstr.32	s13, [r1, #4]
 290:Core/Src/main.c ****   IMU_Angle[2] = (float)IMU_Angle_Raw[2] / 10;
 361              		.loc 1 290 3 is_stmt 1 view .LVU80
 362              		.loc 1 290 18 is_stmt 0 view .LVU81
 363 007a 07EE903A 		vmov	s15, r3	@ int
 364 007e F8EEE77A 		vcvt.f32.s32	s15, s15
 365              		.loc 1 290 42 view .LVU82
 366 0082 F2EE046A 		vmov.f32	s13, #1.0e+1
 367 0086 87EEA67A 		vdiv.f32	s14, s15, s13
 368              		.loc 1 290 16 view .LVU83
 369 008a 81ED027A 		vstr.32	s14, [r1, #8]
 291:Core/Src/main.c ****   //  printf("%f, %d, %d, \n",
 292:Core/Src/main.c ****   //        (int16_t)(IMU_data[0]<<8 | IMU_data[1])/100,
 293:Core/Src/main.c ****   //        (int16_t)(IMU_data[2]<<8 | IMU_data[3]),
 294:Core/Src/main.c ****   //        (int16_t)(IMU_data[4]<<8 | IMU_data[5])*10);
 295:Core/Src/main.c ****   /**printf("%f, %f, %f\n", IMU_Angle[0], IMU_Angle[1], IMU_Angle[2]);*/
 296:Core/Src/main.c ****   HAL_I2C_Slave_Receive_IT(&hi2c2, ReceiveBuffer, sizeof(ReceiveBuffer));
 370              		.loc 1 296 3 is_stmt 1 view .LVU84
 371 008e 0622     		movs	r2, #6
 372 0090 0349     		ldr	r1, .L17
 373 0092 0748     		ldr	r0, .L17+16
 374 0094 FFF7FEFF 		bl	HAL_I2C_Slave_Receive_IT
 375              	.LVL26:
 297:Core/Src/main.c **** }
 376              		.loc 1 297 1 is_stmt 0 view .LVU85
 377 0098 03B0     		add	sp, sp, #12
 378              	.LCFI10:
 379              		.cfi_def_cfa_offset 4
 380              		@ sp needed
 381 009a 5DF804FB 		ldr	pc, [sp], #4
 382              	.L18:
 383 009e 00BF     		.align	2
 384              	.L17:
 385 00a0 00000000 		.word	ReceiveBuffer
 386 00a4 00000000 		.word	IMU_Angle_Raw
 387 00a8 0000C842 		.word	1120403456
 388 00ac 00000000 		.word	IMU_Angle
 389 00b0 00000000 		.word	hi2c2
 390              		.cfi_endproc
 391              	.LFE141:
 393              		.section	.text.Error_Handler,"ax",%progbits
 394              		.align	1
 395              		.global	Error_Handler
ARM GAS  /tmp/ccQMMJ7a.s 			page 13


 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 400              	Error_Handler:
 401              	.LFB142:
 298:Core/Src/main.c **** 
 299:Core/Src/main.c **** /* USER CODE END 4 */
 300:Core/Src/main.c **** 
 301:Core/Src/main.c **** /**
 302:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 303:Core/Src/main.c ****  * @retval None
 304:Core/Src/main.c ****  */
 305:Core/Src/main.c **** void Error_Handler(void) {
 402              		.loc 1 305 26 is_stmt 1 view -0
 403              		.cfi_startproc
 404              		@ Volatile: function does not return.
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              		@ link register save eliminated.
 306:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 307:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 308:Core/Src/main.c ****   __disable_irq();
 408              		.loc 1 308 3 view .LVU87
 409              	.LBB5:
 410              	.LBI5:
 411              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
ARM GAS  /tmp/ccQMMJ7a.s 			page 14


  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /tmp/ccQMMJ7a.s 			page 15


  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 412              		.loc 2 140 27 view .LVU88
 413              	.LBB6:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 414              		.loc 2 142 3 view .LVU89
ARM GAS  /tmp/ccQMMJ7a.s 			page 16


 415              		.syntax unified
 416              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 417 0000 72B6     		cpsid i
 418              	@ 0 "" 2
 419              		.thumb
 420              		.syntax unified
 421              	.L20:
 422              	.LBE6:
 423              	.LBE5:
 309:Core/Src/main.c ****   while (1) {
 424              		.loc 1 309 3 view .LVU90
 310:Core/Src/main.c ****   }
 425              		.loc 1 310 3 view .LVU91
 309:Core/Src/main.c ****   while (1) {
 426              		.loc 1 309 9 view .LVU92
 427 0002 FEE7     		b	.L20
 428              		.cfi_endproc
 429              	.LFE142:
 431              		.section	.text.SystemClock_Config,"ax",%progbits
 432              		.align	1
 433              		.global	SystemClock_Config
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 438              	SystemClock_Config:
 439              	.LFB138:
 229:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 440              		.loc 1 229 31 view -0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 80
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444 0000 00B5     		push	{lr}
 445              	.LCFI11:
 446              		.cfi_def_cfa_offset 4
 447              		.cfi_offset 14, -4
 448 0002 95B0     		sub	sp, sp, #84
 449              	.LCFI12:
 450              		.cfi_def_cfa_offset 88
 230:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 451              		.loc 1 230 3 view .LVU94
 230:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 452              		.loc 1 230 22 is_stmt 0 view .LVU95
 453 0004 3022     		movs	r2, #48
 454 0006 0021     		movs	r1, #0
 455 0008 08A8     		add	r0, sp, #32
 456 000a FFF7FEFF 		bl	memset
 457              	.LVL27:
 231:Core/Src/main.c **** 
 458              		.loc 1 231 3 is_stmt 1 view .LVU96
 231:Core/Src/main.c **** 
 459              		.loc 1 231 22 is_stmt 0 view .LVU97
 460 000e 0023     		movs	r3, #0
 461 0010 0393     		str	r3, [sp, #12]
 462 0012 0493     		str	r3, [sp, #16]
 463 0014 0593     		str	r3, [sp, #20]
 464 0016 0693     		str	r3, [sp, #24]
 465 0018 0793     		str	r3, [sp, #28]
ARM GAS  /tmp/ccQMMJ7a.s 			page 17


 235:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 466              		.loc 1 235 3 is_stmt 1 view .LVU98
 467              	.LBB7:
 235:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 468              		.loc 1 235 3 view .LVU99
 469 001a 0193     		str	r3, [sp, #4]
 235:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 470              		.loc 1 235 3 view .LVU100
 471 001c 204A     		ldr	r2, .L27
 472 001e 116C     		ldr	r1, [r2, #64]
 473 0020 41F08051 		orr	r1, r1, #268435456
 474 0024 1164     		str	r1, [r2, #64]
 235:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 475              		.loc 1 235 3 view .LVU101
 476 0026 126C     		ldr	r2, [r2, #64]
 477 0028 02F08052 		and	r2, r2, #268435456
 478 002c 0192     		str	r2, [sp, #4]
 235:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 479              		.loc 1 235 3 view .LVU102
 480 002e 019A     		ldr	r2, [sp, #4]
 481              	.LBE7:
 235:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 482              		.loc 1 235 3 view .LVU103
 236:Core/Src/main.c **** 
 483              		.loc 1 236 3 view .LVU104
 484              	.LBB8:
 236:Core/Src/main.c **** 
 485              		.loc 1 236 3 view .LVU105
 486 0030 0293     		str	r3, [sp, #8]
 236:Core/Src/main.c **** 
 487              		.loc 1 236 3 view .LVU106
 488 0032 1C4B     		ldr	r3, .L27+4
 489 0034 1A68     		ldr	r2, [r3]
 490 0036 42F48042 		orr	r2, r2, #16384
 491 003a 1A60     		str	r2, [r3]
 236:Core/Src/main.c **** 
 492              		.loc 1 236 3 view .LVU107
 493 003c 1B68     		ldr	r3, [r3]
 494 003e 03F48043 		and	r3, r3, #16384
 495 0042 0293     		str	r3, [sp, #8]
 236:Core/Src/main.c **** 
 496              		.loc 1 236 3 view .LVU108
 497 0044 029B     		ldr	r3, [sp, #8]
 498              	.LBE8:
 236:Core/Src/main.c **** 
 499              		.loc 1 236 3 view .LVU109
 241:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 500              		.loc 1 241 3 view .LVU110
 241:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 501              		.loc 1 241 36 is_stmt 0 view .LVU111
 502 0046 0123     		movs	r3, #1
 503 0048 0893     		str	r3, [sp, #32]
 242:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 504              		.loc 1 242 3 is_stmt 1 view .LVU112
 242:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 505              		.loc 1 242 30 is_stmt 0 view .LVU113
 506 004a 4FF48033 		mov	r3, #65536
ARM GAS  /tmp/ccQMMJ7a.s 			page 18


 507 004e 0993     		str	r3, [sp, #36]
 243:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 508              		.loc 1 243 3 is_stmt 1 view .LVU114
 243:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 509              		.loc 1 243 34 is_stmt 0 view .LVU115
 510 0050 0223     		movs	r3, #2
 511 0052 0E93     		str	r3, [sp, #56]
 244:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 6;
 512              		.loc 1 244 3 is_stmt 1 view .LVU116
 244:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 6;
 513              		.loc 1 244 35 is_stmt 0 view .LVU117
 514 0054 4FF48002 		mov	r2, #4194304
 515 0058 0F92     		str	r2, [sp, #60]
 245:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 516              		.loc 1 245 3 is_stmt 1 view .LVU118
 245:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 517              		.loc 1 245 30 is_stmt 0 view .LVU119
 518 005a 0622     		movs	r2, #6
 519 005c 1092     		str	r2, [sp, #64]
 246:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 520              		.loc 1 246 3 is_stmt 1 view .LVU120
 246:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 521              		.loc 1 246 30 is_stmt 0 view .LVU121
 522 005e A822     		movs	r2, #168
 523 0060 1192     		str	r2, [sp, #68]
 247:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 524              		.loc 1 247 3 is_stmt 1 view .LVU122
 247:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 525              		.loc 1 247 30 is_stmt 0 view .LVU123
 526 0062 1293     		str	r3, [sp, #72]
 248:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 527              		.loc 1 248 3 is_stmt 1 view .LVU124
 248:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 528              		.loc 1 248 30 is_stmt 0 view .LVU125
 529 0064 0723     		movs	r3, #7
 530 0066 1393     		str	r3, [sp, #76]
 249:Core/Src/main.c ****     Error_Handler();
 531              		.loc 1 249 3 is_stmt 1 view .LVU126
 249:Core/Src/main.c ****     Error_Handler();
 532              		.loc 1 249 7 is_stmt 0 view .LVU127
 533 0068 08A8     		add	r0, sp, #32
 534 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 535              	.LVL28:
 249:Core/Src/main.c ****     Error_Handler();
 536              		.loc 1 249 6 discriminator 1 view .LVU128
 537 006e 98B9     		cbnz	r0, .L25
 255:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 538              		.loc 1 255 3 is_stmt 1 view .LVU129
 255:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 539              		.loc 1 255 31 is_stmt 0 view .LVU130
 540 0070 0F23     		movs	r3, #15
 541 0072 0393     		str	r3, [sp, #12]
 257:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 542              		.loc 1 257 3 is_stmt 1 view .LVU131
 257:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 543              		.loc 1 257 34 is_stmt 0 view .LVU132
 544 0074 0223     		movs	r3, #2
ARM GAS  /tmp/ccQMMJ7a.s 			page 19


 545 0076 0493     		str	r3, [sp, #16]
 258:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 546              		.loc 1 258 3 is_stmt 1 view .LVU133
 258:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 547              		.loc 1 258 35 is_stmt 0 view .LVU134
 548 0078 0023     		movs	r3, #0
 549 007a 0593     		str	r3, [sp, #20]
 259:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 550              		.loc 1 259 3 is_stmt 1 view .LVU135
 259:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 551              		.loc 1 259 36 is_stmt 0 view .LVU136
 552 007c 4FF4A053 		mov	r3, #5120
 553 0080 0693     		str	r3, [sp, #24]
 260:Core/Src/main.c **** 
 554              		.loc 1 260 3 is_stmt 1 view .LVU137
 260:Core/Src/main.c **** 
 555              		.loc 1 260 36 is_stmt 0 view .LVU138
 556 0082 4FF48053 		mov	r3, #4096
 557 0086 0793     		str	r3, [sp, #28]
 262:Core/Src/main.c ****     Error_Handler();
 558              		.loc 1 262 3 is_stmt 1 view .LVU139
 262:Core/Src/main.c ****     Error_Handler();
 559              		.loc 1 262 7 is_stmt 0 view .LVU140
 560 0088 0521     		movs	r1, #5
 561 008a 03A8     		add	r0, sp, #12
 562 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 563              	.LVL29:
 262:Core/Src/main.c ****     Error_Handler();
 564              		.loc 1 262 6 discriminator 1 view .LVU141
 565 0090 20B9     		cbnz	r0, .L26
 265:Core/Src/main.c **** 
 566              		.loc 1 265 1 view .LVU142
 567 0092 15B0     		add	sp, sp, #84
 568              	.LCFI13:
 569              		.cfi_remember_state
 570              		.cfi_def_cfa_offset 4
 571              		@ sp needed
 572 0094 5DF804FB 		ldr	pc, [sp], #4
 573              	.L25:
 574              	.LCFI14:
 575              		.cfi_restore_state
 250:Core/Src/main.c ****   }
 576              		.loc 1 250 5 is_stmt 1 view .LVU143
 577 0098 FFF7FEFF 		bl	Error_Handler
 578              	.LVL30:
 579              	.L26:
 263:Core/Src/main.c ****   }
 580              		.loc 1 263 5 view .LVU144
 581 009c FFF7FEFF 		bl	Error_Handler
 582              	.LVL31:
 583              	.L28:
 584              		.align	2
 585              	.L27:
 586 00a0 00380240 		.word	1073887232
 587 00a4 00700040 		.word	1073770496
 588              		.cfi_endproc
 589              	.LFE138:
ARM GAS  /tmp/ccQMMJ7a.s 			page 20


 591              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 592              		.align	2
 593              	.LC0:
 594 0000 2D2D2D2D 		.ascii	"--------------init--------------\012\000"
 594      2D2D2D2D 
 594      2D2D2D2D 
 594      2D2D696E 
 594      69742D2D 
 595              		.global	__aeabi_f2d
 596              		.global	__aeabi_d2f
 597              		.global	__aeabi_ddiv
 598              		.global	__aeabi_d2iz
 599 0022 0000     		.align	2
 600              	.LC1:
 601 0024 61696D5F 		.ascii	"aim_x:%d/1000, aim_y:%d/1000, aim_z:%d/1000, yaw:%d"
 601      783A2564 
 601      2F313030 
 601      302C2061 
 601      696D5F79 
 602 0057 2F313030 		.ascii	"/1000, pitch:%d/1000 \012\000"
 602      302C2070 
 602      69746368 
 602      3A25642F 
 602      31303030 
 603              		.section	.text.main,"ax",%progbits
 604              		.align	1
 605              		.global	main
 606              		.syntax unified
 607              		.thumb
 608              		.thumb_func
 610              	main:
 611              	.LFB137:
  91:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 612              		.loc 1 91 16 view -0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 104
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 616 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 617              	.LCFI15:
 618              		.cfi_def_cfa_offset 36
 619              		.cfi_offset 4, -36
 620              		.cfi_offset 5, -32
 621              		.cfi_offset 6, -28
 622              		.cfi_offset 7, -24
 623              		.cfi_offset 8, -20
 624              		.cfi_offset 9, -16
 625              		.cfi_offset 10, -12
 626              		.cfi_offset 11, -8
 627              		.cfi_offset 14, -4
 628 0004 2DED028B 		vpush.64	{d8}
 629              	.LCFI16:
 630              		.cfi_def_cfa_offset 44
 631              		.cfi_offset 80, -44
 632              		.cfi_offset 81, -40
 633 0008 9FB0     		sub	sp, sp, #124
 634              	.LCFI17:
 635              		.cfi_def_cfa_offset 168
ARM GAS  /tmp/ccQMMJ7a.s 			page 21


  99:Core/Src/main.c **** 
 636              		.loc 1 99 3 view .LVU146
 637 000a FFF7FEFF 		bl	HAL_Init
 638              	.LVL32:
 106:Core/Src/main.c **** 
 639              		.loc 1 106 3 view .LVU147
 640 000e FFF7FEFF 		bl	SystemClock_Config
 641              	.LVL33:
 113:Core/Src/main.c ****   MX_CAN1_Init();
 642              		.loc 1 113 3 view .LVU148
 643 0012 FFF7FEFF 		bl	MX_GPIO_Init
 644              	.LVL34:
 114:Core/Src/main.c ****   MX_I2C2_Init();
 645              		.loc 1 114 3 view .LVU149
 646 0016 FFF7FEFF 		bl	MX_CAN1_Init
 647              	.LVL35:
 115:Core/Src/main.c ****   MX_USART1_UART_Init();
 648              		.loc 1 115 3 view .LVU150
 649 001a FFF7FEFF 		bl	MX_I2C2_Init
 650              	.LVL36:
 116:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 651              		.loc 1 116 3 view .LVU151
 652 001e FFF7FEFF 		bl	MX_USART1_UART_Init
 653              	.LVL37:
 117:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 654              		.loc 1 117 3 view .LVU152
 655 0022 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 656              	.LVL38:
 118:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 657              		.loc 1 118 3 view .LVU153
 658 0026 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 659              	.LVL39:
 121:Core/Src/main.c ****   my_can_filter_init_recv_all(&hcan1);
 660              		.loc 1 121 3 view .LVU154
 661 002a 664C     		ldr	r4, .L41
 662 002c 2046     		mov	r0, r4
 663 002e FFF7FEFF 		bl	HAL_CAN_Start
 664              	.LVL40:
 122:Core/Src/main.c ****   HAL_CAN_ActivateNotification(&hcan1,
 665              		.loc 1 122 3 view .LVU155
 666 0032 2046     		mov	r0, r4
 667 0034 FFF7FEFF 		bl	my_can_filter_init_recv_all
 668              	.LVL41:
 123:Core/Src/main.c ****                                CAN_IT_RX_FIFO0_MSG_PENDING); // enable IT
 669              		.loc 1 123 3 view .LVU156
 670 0038 0221     		movs	r1, #2
 671 003a 2046     		mov	r0, r4
 672 003c FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 673              	.LVL42:
 131:Core/Src/main.c ****   motor_pid[0].f_param_init(&motor_pid[0], PID_Speed, CURRENT_LIMIT, 5000, 0, 0,
 674              		.loc 1 131 3 view .LVU157
 675 0040 DFF8CC81 		ldr	r8, .L41+76
 676 0044 4046     		mov	r0, r8
 677 0046 FFF7FEFF 		bl	pid_init
 678              	.LVL43:
 132:Core/Src/main.c ****                             0, 8000, 61.4656753, 0.6697404, 0);
 679              		.loc 1 132 3 view .LVU158
ARM GAS  /tmp/ccQMMJ7a.s 			page 22


 132:Core/Src/main.c ****                             0, 8000, 61.4656753, 0.6697404, 0);
 680              		.loc 1 132 15 is_stmt 0 view .LVU159
 681 004a D8F85850 		ldr	r5, [r8, #88]
 132:Core/Src/main.c ****                             0, 8000, 61.4656753, 0.6697404, 0);
 682              		.loc 1 132 3 view .LVU160
 683 004e 9FED5E8A 		vldr.32	s16, .L41+4
 684 0052 4FF4FA5A 		mov	r10, #8000
 685 0056 CDF808A0 		str	r10, [sp, #8]
 686 005a 0024     		movs	r4, #0
 687 005c 0194     		str	r4, [sp, #4]
 688 005e 0094     		str	r4, [sp]
 689 0060 F0EE481A 		vmov.f32	s3, s16
 690 0064 9FED591A 		vldr.32	s2, .L41+8
 691 0068 DFED590A 		vldr.32	s1, .L41+12
 692 006c B0EE480A 		vmov.f32	s0, s16
 693 0070 41F28833 		movw	r3, #5000
 694 0074 4FF4FA62 		mov	r2, #2000
 695 0078 0121     		movs	r1, #1
 696 007a 4046     		mov	r0, r8
 697 007c A847     		blx	r5
 698              	.LVL44:
 134:Core/Src/main.c ****   angle_pid[0].f_param_init(&angle_pid[0], PID_Speed, 300, 300, 0, 0, 4000, 0,
 699              		.loc 1 134 3 is_stmt 1 view .LVU161
 700 007e 554E     		ldr	r6, .L41+16
 701 0080 3046     		mov	r0, r6
 702 0082 FFF7FEFF 		bl	pid_init
 703              	.LVL45:
 135:Core/Src/main.c ****                             1.3713, 0.00495369, 94.8474 * 0);
 704              		.loc 1 135 3 view .LVU162
 135:Core/Src/main.c ****                             1.3713, 0.00495369, 94.8474 * 0);
 705              		.loc 1 135 15 is_stmt 0 view .LVU163
 706 0086 B56D     		ldr	r5, [r6, #88]
 135:Core/Src/main.c ****                             1.3713, 0.00495369, 94.8474 * 0);
 707              		.loc 1 135 3 view .LVU164
 708 0088 0294     		str	r4, [sp, #8]
 709 008a 4FF47A69 		mov	r9, #4000
 710 008e CDF80490 		str	r9, [sp, #4]
 711 0092 0094     		str	r4, [sp]
 712 0094 F0EE481A 		vmov.f32	s3, s16
 713 0098 9FED4F1A 		vldr.32	s2, .L41+20
 714 009c DFED4F0A 		vldr.32	s1, .L41+24
 715 00a0 B0EE480A 		vmov.f32	s0, s16
 716 00a4 4FF49673 		mov	r3, #300
 717 00a8 1A46     		mov	r2, r3
 718 00aa 0121     		movs	r1, #1
 719 00ac 3046     		mov	r0, r6
 720 00ae A847     		blx	r5
 721              	.LVL46:
 137:Core/Src/main.c ****   abs_pid[0].f_param_init(&abs_pid[0], PID_Speed, 300, 300, 0, 0, 4000, 0, -0.9,
 722              		.loc 1 137 3 is_stmt 1 view .LVU165
 723 00b0 4B4D     		ldr	r5, .L41+28
 724 00b2 2846     		mov	r0, r5
 725 00b4 FFF7FEFF 		bl	pid_init
 726              	.LVL47:
 138:Core/Src/main.c ****                           -0.003, -3);
 727              		.loc 1 138 3 view .LVU166
 138:Core/Src/main.c ****                           -0.003, -3);
ARM GAS  /tmp/ccQMMJ7a.s 			page 23


 728              		.loc 1 138 13 is_stmt 0 view .LVU167
 729 00b8 AF6D     		ldr	r7, [r5, #88]
 138:Core/Src/main.c ****                           -0.003, -3);
 730              		.loc 1 138 3 view .LVU168
 731 00ba 0294     		str	r4, [sp, #8]
 732 00bc CDF80490 		str	r9, [sp, #4]
 733 00c0 0094     		str	r4, [sp]
 734 00c2 F8EE081A 		vmov.f32	s3, #-3.0e+0
 735 00c6 9FED471A 		vldr.32	s2, .L41+32
 736 00ca DFED470A 		vldr.32	s1, .L41+36
 737 00ce B0EE480A 		vmov.f32	s0, s16
 738 00d2 4FF49673 		mov	r3, #300
 739 00d6 1A46     		mov	r2, r3
 740 00d8 0121     		movs	r1, #1
 741 00da 2846     		mov	r0, r5
 742 00dc B847     		blx	r7
 743              	.LVL48:
 142:Core/Src/main.c ****   motor_pid[1].f_param_init(&motor_pid[1], PID_Speed, CURRENT_LIMIT, 5000, 0, 0,
 744              		.loc 1 142 3 is_stmt 1 view .LVU169
 745 00de 08F16407 		add	r7, r8, #100
 746 00e2 3846     		mov	r0, r7
 747 00e4 FFF7FEFF 		bl	pid_init
 748              	.LVL49:
 143:Core/Src/main.c ****                             0, 8000, 4.01239768, 3.0348503, 0);
 749              		.loc 1 143 3 view .LVU170
 143:Core/Src/main.c ****                             0, 8000, 4.01239768, 3.0348503, 0);
 750              		.loc 1 143 15 is_stmt 0 view .LVU171
 751 00e8 D8F8BC80 		ldr	r8, [r8, #188]
 143:Core/Src/main.c ****                             0, 8000, 4.01239768, 3.0348503, 0);
 752              		.loc 1 143 3 view .LVU172
 753 00ec CDF808A0 		str	r10, [sp, #8]
 754 00f0 0194     		str	r4, [sp, #4]
 755 00f2 0094     		str	r4, [sp]
 756 00f4 F0EE481A 		vmov.f32	s3, s16
 757 00f8 9FED3C1A 		vldr.32	s2, .L41+40
 758 00fc DFED3C0A 		vldr.32	s1, .L41+44
 759 0100 B0EE480A 		vmov.f32	s0, s16
 760 0104 41F28833 		movw	r3, #5000
 761 0108 4FF4FA62 		mov	r2, #2000
 762 010c 0121     		movs	r1, #1
 763 010e 3846     		mov	r0, r7
 764 0110 C047     		blx	r8
 765              	.LVL50:
 145:Core/Src/main.c ****   angle_pid[1].f_param_init(&angle_pid[1], PID_Speed, 500, 500, 0, 0, 4000, 0,
 766              		.loc 1 145 3 is_stmt 1 view .LVU173
 767 0112 06F16407 		add	r7, r6, #100
 768 0116 3846     		mov	r0, r7
 769 0118 FFF7FEFF 		bl	pid_init
 770              	.LVL51:
 146:Core/Src/main.c ****                             1.27137, 0.01084, 27.877753 * 0.4);
 771              		.loc 1 146 3 view .LVU174
 146:Core/Src/main.c ****                             1.27137, 0.01084, 27.877753 * 0.4);
 772              		.loc 1 146 15 is_stmt 0 view .LVU175
 773 011c D6F8BC60 		ldr	r6, [r6, #188]
 146:Core/Src/main.c ****                             1.27137, 0.01084, 27.877753 * 0.4);
 774              		.loc 1 146 3 view .LVU176
 775 0120 0294     		str	r4, [sp, #8]
ARM GAS  /tmp/ccQMMJ7a.s 			page 24


 776 0122 CDF80490 		str	r9, [sp, #4]
 777 0126 0094     		str	r4, [sp]
 778 0128 DFED321A 		vldr.32	s3, .L41+48
 779 012c 9FED321A 		vldr.32	s2, .L41+52
 780 0130 DFED320A 		vldr.32	s1, .L41+56
 781 0134 B0EE480A 		vmov.f32	s0, s16
 782 0138 4FF4FA73 		mov	r3, #500
 783 013c 1A46     		mov	r2, r3
 784 013e 0121     		movs	r1, #1
 785 0140 3846     		mov	r0, r7
 786 0142 B047     		blx	r6
 787              	.LVL52:
 148:Core/Src/main.c ****   abs_pid[1].f_param_init(&abs_pid[1], PID_Speed, 300, 300, 0, 0, 4000, 0, 0.5,
 788              		.loc 1 148 3 is_stmt 1 view .LVU177
 789 0144 05F16406 		add	r6, r5, #100
 790 0148 3046     		mov	r0, r6
 791 014a FFF7FEFF 		bl	pid_init
 792              	.LVL53:
 149:Core/Src/main.c ****                           0, 10);
 793              		.loc 1 149 3 view .LVU178
 149:Core/Src/main.c ****                           0, 10);
 794              		.loc 1 149 13 is_stmt 0 view .LVU179
 795 014e D5F8BC50 		ldr	r5, [r5, #188]
 149:Core/Src/main.c ****                           0, 10);
 796              		.loc 1 149 3 view .LVU180
 797 0152 0294     		str	r4, [sp, #8]
 798 0154 CDF80490 		str	r9, [sp, #4]
 799 0158 0094     		str	r4, [sp]
 800 015a F2EE041A 		vmov.f32	s3, #1.0e+1
 801 015e B0EE481A 		vmov.f32	s2, s16
 802 0162 F6EE000A 		vmov.f32	s1, #5.0e-1
 803 0166 B0EE480A 		vmov.f32	s0, s16
 804 016a 4FF49673 		mov	r3, #300
 805 016e 1A46     		mov	r2, r3
 806 0170 0121     		movs	r1, #1
 807 0172 3046     		mov	r0, r6
 808 0174 A847     		blx	r5
 809              	.LVL54:
 152:Core/Src/main.c ****   HAL_I2C_Slave_Receive_IT(&hi2c2, ReceiveBuffer, sizeof(ReceiveBuffer));
 810              		.loc 1 152 3 is_stmt 1 view .LVU181
 811 0176 2249     		ldr	r1, .L41+60
 812 0178 2248     		ldr	r0, .L41+64
 813 017a FFF7FEFF 		bl	cprintf
 814              	.LVL55:
 153:Core/Src/main.c **** 
 815              		.loc 1 153 3 view .LVU182
 816 017e 0622     		movs	r2, #6
 817 0180 2149     		ldr	r1, .L41+68
 818 0182 2248     		ldr	r0, .L41+72
 819 0184 FFF7FEFF 		bl	HAL_I2C_Slave_Receive_IT
 820              	.LVL56:
 155:Core/Src/main.c ****   sp.header = 0x5a;
 821              		.loc 1 155 3 view .LVU183
 156:Core/Src/main.c ****   sp.detect_color = 1;
 822              		.loc 1 156 3 view .LVU184
 156:Core/Src/main.c ****   sp.detect_color = 1;
 823              		.loc 1 156 13 is_stmt 0 view .LVU185
ARM GAS  /tmp/ccQMMJ7a.s 			page 25


 824 0188 5A23     		movs	r3, #90
 825 018a 8DF85C30 		strb	r3, [sp, #92]
 157:Core/Src/main.c ****   sp.reset_tracker = 0;
 826              		.loc 1 157 3 is_stmt 1 view .LVU186
 157:Core/Src/main.c ****   sp.reset_tracker = 0;
 827              		.loc 1 157 19 is_stmt 0 view .LVU187
 828 018e 9DF85D30 		ldrb	r3, [sp, #93]	@ zero_extendqisi2
 829 0192 43F00103 		orr	r3, r3, #1
 830 0196 8DF85D30 		strb	r3, [sp, #93]
 158:Core/Src/main.c ****   sp.checksum = 0;
 831              		.loc 1 158 3 is_stmt 1 view .LVU188
 158:Core/Src/main.c ****   sp.checksum = 0;
 832              		.loc 1 158 20 is_stmt 0 view .LVU189
 833 019a DBB2     		uxtb	r3, r3
 834 019c 64F34103 		bfi	r3, r4, #1, #1
 835 01a0 8DF85D30 		strb	r3, [sp, #93]
 159:Core/Src/main.c ****   ReceivePacket rp = {0};
 836              		.loc 1 159 3 is_stmt 1 view .LVU190
 159:Core/Src/main.c ****   ReceivePacket rp = {0};
 837              		.loc 1 159 15 is_stmt 0 view .LVU191
 838 01a4 ADF87640 		strh	r4, [sp, #118]	@ movhi
 160:Core/Src/main.c ****   uint32_t size = SEND_PKG_SIZE;
 839              		.loc 1 160 3 is_stmt 1 view .LVU192
 160:Core/Src/main.c ****   uint32_t size = SEND_PKG_SIZE;
 840              		.loc 1 160 17 is_stmt 0 view .LVU193
 841 01a8 3022     		movs	r2, #48
 842 01aa 2146     		mov	r1, r4
 843 01ac 0BA8     		add	r0, sp, #44
 844 01ae FFF7FEFF 		bl	memset
 845              	.LVL57:
 161:Core/Src/main.c **** 	Vec3d aim_pos = {0};
 846              		.loc 1 161 3 is_stmt 1 view .LVU194
 161:Core/Src/main.c **** 	Vec3d aim_pos = {0};
 847              		.loc 1 161 12 is_stmt 0 view .LVU195
 848 01b2 1C23     		movs	r3, #28
 849 01b4 0A93     		str	r3, [sp, #40]
 162:Core/Src/main.c **** 	float yaw,pitch;
 850              		.loc 1 162 2 is_stmt 1 view .LVU196
 162:Core/Src/main.c **** 	float yaw,pitch;
 851              		.loc 1 162 8 is_stmt 0 view .LVU197
 852 01b6 0494     		str	r4, [sp, #16]
 853 01b8 0594     		str	r4, [sp, #20]
 854 01ba 0694     		str	r4, [sp, #24]
 855 01bc 0794     		str	r4, [sp, #28]
 856 01be 0894     		str	r4, [sp, #32]
 857 01c0 0994     		str	r4, [sp, #36]
 163:Core/Src/main.c **** 	int nan_f = 0;
 858              		.loc 1 163 2 is_stmt 1 view .LVU198
 164:Core/Src/main.c **** 
 859              		.loc 1 164 2 view .LVU199
 860              	.LVL58:
 164:Core/Src/main.c **** 
 861              		.loc 1 164 2 is_stmt 0 view .LVU200
 862 01c2 38E0     		b	.L34
 863              	.L42:
 864              		.align	2
 865              	.L41:
ARM GAS  /tmp/ccQMMJ7a.s 			page 26


 866 01c4 00000000 		.word	hcan1
 867 01c8 00000000 		.word	0
 868 01cc 1B742B3F 		.word	1059812379
 869 01d0 DADC7542 		.word	1115020506
 870 01d4 00000000 		.word	angle_pid
 871 01d8 9052A23B 		.word	1000493712
 872 01dc C286AF3F 		.word	1068467906
 873 01e0 00000000 		.word	abs_pid
 874 01e4 A69B44BB 		.word	-1153131610
 875 01e8 666666BF 		.word	-1083808154
 876 01ec FD3A4240 		.word	1078082301
 877 01f0 90658040 		.word	1082156432
 878 01f4 E96A3241 		.word	1093823209
 879 01f8 419A313C 		.word	1009883713
 880 01fc 41BCA23F 		.word	1067629633
 881 0200 00000000 		.word	.LC0
 882 0204 00000000 		.word	huart1
 883 0208 00000000 		.word	ReceiveBuffer
 884 020c 00000000 		.word	hi2c2
 885 0210 00000000 		.word	motor_pid
 886              	.LVL59:
 887              	.L38:
 888              	.LBB9:
 197:Core/Src/main.c **** 				ABS_Gimbal_angle[0] = 8191;
 889              		.loc 1 197 8 is_stmt 1 view .LVU201
 199:Core/Src/main.c **** 				nan_f = 1;
 890              		.loc 1 199 8 view .LVU202
 199:Core/Src/main.c **** 				nan_f = 1;
 891              		.loc 1 199 10 is_stmt 0 view .LVU203
 892 0214 F4EE677A 		vcmp.f32	s15, s15
 893 0218 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 894 021c 80F1E680 		bvs	.L40
 202:Core/Src/main.c **** 
 895              		.loc 1 202 16 view .LVU204
 896 0220 0024     		movs	r4, #0
 897              	.LVL60:
 898              	.L33:
 212:Core/Src/main.c **** 
 899              		.loc 1 212 3 is_stmt 1 view .LVU205
 900 0222 FFF7FEFF 		bl	Abs_angle_control_loop
 901              	.LVL61:
 215:Core/Src/main.c ****       HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 902              		.loc 1 215 5 view .LVU206
 219:Core/Src/main.c ****     j++;
 903              		.loc 1 219 5 view .LVU207
 219:Core/Src/main.c ****     j++;
 904              		.loc 1 219 6 is_stmt 0 view .LVU208
 905 0226 7A4A     		ldr	r2, .L43+16
 906 0228 1368     		ldr	r3, [r2]
 907 022a 0133     		adds	r3, r3, #1
 908 022c 1360     		str	r3, [r2]
 220:Core/Src/main.c ****   }
 909              		.loc 1 220 5 is_stmt 1 view .LVU209
 220:Core/Src/main.c ****   }
 910              		.loc 1 220 6 is_stmt 0 view .LVU210
 911 022e 794A     		ldr	r2, .L43+20
 912 0230 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccQMMJ7a.s 			page 27


 913 0232 0133     		adds	r3, r3, #1
 914 0234 1360     		str	r3, [r2]
 915              	.LBE9:
 166:Core/Src/main.c ****     /* USER CODE END WHILE */
 916              		.loc 1 166 9 is_stmt 1 view .LVU211
 917              	.LVL62:
 918              	.L34:
 166:Core/Src/main.c ****     /* USER CODE END WHILE */
 919              		.loc 1 166 3 view .LVU212
 920              	.LBB10:
 170:Core/Src/main.c ****     fromVector((uint8_t *)buf_r, &rp);
 921              		.loc 1 170 5 view .LVU213
 170:Core/Src/main.c ****     fromVector((uint8_t *)buf_r, &rp);
 922              		.loc 1 170 27 is_stmt 0 view .LVU214
 923 0236 784B     		ldr	r3, .L43+24
 924 0238 DB68     		ldr	r3, [r3, #12]
 170:Core/Src/main.c ****     fromVector((uint8_t *)buf_r, &rp);
 925              		.loc 1 170 5 view .LVU215
 926 023a 784D     		ldr	r5, .L43+28
 927 023c 0AA9     		add	r1, sp, #40
 928 023e 2846     		mov	r0, r5
 929 0240 9847     		blx	r3
 930              	.LVL63:
 171:Core/Src/main.c **** 		aim_pos.x = rp.x;
 931              		.loc 1 171 5 is_stmt 1 view .LVU216
 932 0242 0BA9     		add	r1, sp, #44
 933 0244 2846     		mov	r0, r5
 934 0246 FFF7FEFF 		bl	fromVector
 935              	.LVL64:
 172:Core/Src/main.c **** 		aim_pos.y = rp.y; 
 936              		.loc 1 172 3 view .LVU217
 172:Core/Src/main.c **** 		aim_pos.y = rp.y; 
 937              		.loc 1 172 17 is_stmt 0 view .LVU218
 938 024a DDF82E00 		ldr	r0, [sp, #46]	@ unaligned
 939 024e FFF7FEFF 		bl	__aeabi_f2d
 940              	.LVL65:
 172:Core/Src/main.c **** 		aim_pos.y = rp.y; 
 941              		.loc 1 172 13 view .LVU219
 942 0252 CDE90401 		strd	r0, [sp, #16]
 173:Core/Src/main.c **** 		aim_pos.z = rp.z;
 943              		.loc 1 173 3 is_stmt 1 view .LVU220
 173:Core/Src/main.c **** 		aim_pos.z = rp.z;
 944              		.loc 1 173 17 is_stmt 0 view .LVU221
 945 0256 DDF83200 		ldr	r0, [sp, #50]	@ unaligned
 946 025a FFF7FEFF 		bl	__aeabi_f2d
 947              	.LVL66:
 173:Core/Src/main.c **** 		aim_pos.z = rp.z;
 948              		.loc 1 173 13 view .LVU222
 949 025e CDE90601 		strd	r0, [sp, #24]
 174:Core/Src/main.c **** 		float l = rc_norm(&aim_pos);
 950              		.loc 1 174 3 is_stmt 1 view .LVU223
 174:Core/Src/main.c **** 		float l = rc_norm(&aim_pos);
 951              		.loc 1 174 17 is_stmt 0 view .LVU224
 952 0262 DDF83600 		ldr	r0, [sp, #54]	@ unaligned
 953 0266 FFF7FEFF 		bl	__aeabi_f2d
 954              	.LVL67:
 174:Core/Src/main.c **** 		float l = rc_norm(&aim_pos);
ARM GAS  /tmp/ccQMMJ7a.s 			page 28


 955              		.loc 1 174 13 view .LVU225
 956 026a CDE90801 		strd	r0, [sp, #32]
 175:Core/Src/main.c **** 
 957              		.loc 1 175 3 is_stmt 1 view .LVU226
 175:Core/Src/main.c **** 
 958              		.loc 1 175 13 is_stmt 0 view .LVU227
 959 026e 04A8     		add	r0, sp, #16
 960 0270 FFF7FEFF 		bl	rc_norm
 961              	.LVL68:
 962 0274 51EC100B 		vmov	r0, r1, d0
 175:Core/Src/main.c **** 
 963              		.loc 1 175 9 discriminator 1 view .LVU228
 964 0278 FFF7FEFF 		bl	__aeabi_d2f
 965              	.LVL69:
 966 027c 0546     		mov	r5, r0	@ float
 967              	.LVL70:
 177:Core/Src/main.c **** 		pitch = asin(aim_pos.z/l);//俯仰角
 968              		.loc 1 177 3 is_stmt 1 view .LVU229
 177:Core/Src/main.c **** 		pitch = asin(aim_pos.z/l);//俯仰角
 969              		.loc 1 177 21 is_stmt 0 view .LVU230
 970 027e DDE90667 		ldrd	r6, [sp, #24]
 177:Core/Src/main.c **** 		pitch = asin(aim_pos.z/l);//俯仰角
 971              		.loc 1 177 31 view .LVU231
 972 0282 DDE904AB 		ldrd	r10, [sp, #16]
 177:Core/Src/main.c **** 		pitch = asin(aim_pos.z/l);//俯仰角
 973              		.loc 1 177 9 view .LVU232
 974 0286 5246     		mov	r2, r10
 975 0288 5B46     		mov	r3, fp
 976 028a 3046     		mov	r0, r6
 977              	.LVL71:
 177:Core/Src/main.c **** 		pitch = asin(aim_pos.z/l);//俯仰角
 978              		.loc 1 177 9 view .LVU233
 979 028c 3946     		mov	r1, r7
 980 028e FFF7FEFF 		bl	__aeabi_ddiv
 981              	.LVL72:
 982 0292 41EC100B 		vmov	d0, r0, r1
 983 0296 FFF7FEFF 		bl	atan
 984              	.LVL73:
 985 029a 51EC100B 		vmov	r0, r1, d0
 177:Core/Src/main.c **** 		pitch = asin(aim_pos.z/l);//俯仰角
 986              		.loc 1 177 7 discriminator 1 view .LVU234
 987 029e FFF7FEFF 		bl	__aeabi_d2f
 988              	.LVL74:
 989 02a2 08EE900A 		vmov	s17, r0
 990              	.LVL75:
 178:Core/Src/main.c ****     float x = 1.0;
 991              		.loc 1 178 3 is_stmt 1 view .LVU235
 178:Core/Src/main.c ****     float x = 1.0;
 992              		.loc 1 178 23 is_stmt 0 view .LVU236
 993 02a6 DDE90889 		ldrd	r8, [sp, #32]
 178:Core/Src/main.c ****     float x = 1.0;
 994              		.loc 1 178 11 view .LVU237
 995 02aa 2846     		mov	r0, r5	@ float
 996              	.LVL76:
 178:Core/Src/main.c ****     float x = 1.0;
 997              		.loc 1 178 11 view .LVU238
 998 02ac FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  /tmp/ccQMMJ7a.s 			page 29


 999              	.LVL77:
 1000 02b0 0246     		mov	r2, r0
 1001 02b2 0B46     		mov	r3, r1
 1002 02b4 4046     		mov	r0, r8
 1003 02b6 4946     		mov	r1, r9
 1004 02b8 FFF7FEFF 		bl	__aeabi_ddiv
 1005              	.LVL78:
 1006 02bc 41EC100B 		vmov	d0, r0, r1
 1007 02c0 FFF7FEFF 		bl	asin
 1008              	.LVL79:
 1009 02c4 51EC100B 		vmov	r0, r1, d0
 178:Core/Src/main.c ****     float x = 1.0;
 1010              		.loc 1 178 9 discriminator 1 view .LVU239
 1011 02c8 FFF7FEFF 		bl	__aeabi_d2f
 1012              	.LVL80:
 1013 02cc 08EE100A 		vmov	s16, r0
 1014              	.LVL81:
 179:Core/Src/main.c ****     //printf("%d/1000\n", (int)x*1000);
 1015              		.loc 1 179 5 is_stmt 1 view .LVU240
 182:Core/Src/main.c ****                    (int)aim_pos.x*1000, (int)aim_pos.y*1000, (int)aim_pos.z*1000, (int)yaw*1000, (i
 1016              		.loc 1 182 5 view .LVU241
 1017 02d0 5046     		mov	r0, r10
 1018              	.LVL82:
 182:Core/Src/main.c ****                    (int)aim_pos.x*1000, (int)aim_pos.y*1000, (int)aim_pos.z*1000, (int)yaw*1000, (i
 1019              		.loc 1 182 5 is_stmt 0 view .LVU242
 1020 02d2 5946     		mov	r1, fp
 1021 02d4 FFF7FEFF 		bl	__aeabi_d2iz
 1022              	.LVL83:
 1023 02d8 0546     		mov	r5, r0
 1024              	.LVL84:
 182:Core/Src/main.c ****                    (int)aim_pos.x*1000, (int)aim_pos.y*1000, (int)aim_pos.z*1000, (int)yaw*1000, (i
 1025              		.loc 1 182 5 view .LVU243
 1026 02da 3046     		mov	r0, r6
 1027 02dc 3946     		mov	r1, r7
 1028 02de FFF7FEFF 		bl	__aeabi_d2iz
 1029              	.LVL85:
 1030 02e2 0646     		mov	r6, r0
 1031 02e4 4046     		mov	r0, r8
 1032 02e6 4946     		mov	r1, r9
 1033 02e8 FFF7FEFF 		bl	__aeabi_d2iz
 1034              	.LVL86:
 1035 02ec FDEEE87A 		vcvt.s32.f32	s15, s17
 1036 02f0 17EE903A 		vmov	r3, s15	@ int
 1037 02f4 FDEEC87A 		vcvt.s32.f32	s15, s16
 1038 02f8 17EE901A 		vmov	r1, s15	@ int
 1039 02fc 4FF47A72 		mov	r2, #1000
 1040 0300 02FB01F1 		mul	r1, r2, r1
 1041 0304 0291     		str	r1, [sp, #8]
 1042 0306 02FB03F3 		mul	r3, r2, r3
 1043 030a 0193     		str	r3, [sp, #4]
 1044 030c 02FB00F0 		mul	r0, r2, r0
 1045 0310 0090     		str	r0, [sp]
 1046 0312 02FB06F3 		mul	r3, r2, r6
 1047 0316 05FB02F2 		mul	r2, r5, r2
 1048 031a 4149     		ldr	r1, .L43+32
 1049 031c 4148     		ldr	r0, .L43+36
 1050 031e FFF7FEFF 		bl	cprintf
ARM GAS  /tmp/ccQMMJ7a.s 			page 30


 1051              	.LVL87:
 185:Core/Src/main.c **** 		sp.pitch = M_PI * (-IMU_Angle[0] + 180)/180;
 1052              		.loc 1 185 3 is_stmt 1 view .LVU244
 185:Core/Src/main.c **** 		sp.pitch = M_PI * (-IMU_Angle[0] + 180)/180;
 1053              		.loc 1 185 30 is_stmt 0 view .LVU245
 1054 0322 414D     		ldr	r5, .L43+40
 1055 0324 D5ED027A 		vldr.32	s15, [r5, #8]
 185:Core/Src/main.c **** 		sp.pitch = M_PI * (-IMU_Angle[0] + 180)/180;
 1056              		.loc 1 185 33 view .LVU246
 1057 0328 9FED407A 		vldr.32	s14, .L43+44
 1058 032c 77EE677A 		vsub.f32	s15, s14, s15
 1059 0330 17EE900A 		vmov	r0, s15
 1060 0334 FFF7FEFF 		bl	__aeabi_f2d
 1061              	.LVL88:
 185:Core/Src/main.c **** 		sp.pitch = M_PI * (-IMU_Angle[0] + 180)/180;
 1062              		.loc 1 185 17 view .LVU247
 1063 0338 31A3     		adr	r3, .L43
 1064 033a D3E90023 		ldrd	r2, [r3]
 1065 033e FFF7FEFF 		bl	__aeabi_dmul
 1066              	.LVL89:
 185:Core/Src/main.c **** 		sp.pitch = M_PI * (-IMU_Angle[0] + 180)/180;
 1067              		.loc 1 185 37 view .LVU248
 1068 0342 0022     		movs	r2, #0
 1069 0344 3A4B     		ldr	r3, .L43+48
 1070 0346 FFF7FEFF 		bl	__aeabi_ddiv
 1071              	.LVL90:
 1072 034a FFF7FEFF 		bl	__aeabi_d2f
 1073              	.LVL91:
 185:Core/Src/main.c **** 		sp.pitch = M_PI * (-IMU_Angle[0] + 180)/180;
 1074              		.loc 1 185 10 view .LVU249
 1075 034e CDF86600 		str	r0, [sp, #102]	@ unaligned
 186:Core/Src/main.c **** 		sp.roll = M_PI * IMU_Angle[1]/180;
 1076              		.loc 1 186 3 is_stmt 1 view .LVU250
 186:Core/Src/main.c **** 		sp.roll = M_PI * IMU_Angle[1]/180;
 1077              		.loc 1 186 32 is_stmt 0 view .LVU251
 1078 0352 D5ED007A 		vldr.32	s15, [r5]
 186:Core/Src/main.c **** 		sp.roll = M_PI * IMU_Angle[1]/180;
 1079              		.loc 1 186 36 view .LVU252
 1080 0356 9FED377A 		vldr.32	s14, .L43+52
 1081 035a 77EE677A 		vsub.f32	s15, s14, s15
 1082 035e 17EE900A 		vmov	r0, s15
 1083 0362 FFF7FEFF 		bl	__aeabi_f2d
 1084              	.LVL92:
 186:Core/Src/main.c **** 		sp.roll = M_PI * IMU_Angle[1]/180;
 1085              		.loc 1 186 19 view .LVU253
 1086 0366 26A3     		adr	r3, .L43
 1087 0368 D3E90023 		ldrd	r2, [r3]
 1088 036c FFF7FEFF 		bl	__aeabi_dmul
 1089              	.LVL93:
 186:Core/Src/main.c **** 		sp.roll = M_PI * IMU_Angle[1]/180;
 1090              		.loc 1 186 42 view .LVU254
 1091 0370 0022     		movs	r2, #0
 1092 0372 2F4B     		ldr	r3, .L43+48
 1093 0374 FFF7FEFF 		bl	__aeabi_ddiv
 1094              	.LVL94:
 1095 0378 FFF7FEFF 		bl	__aeabi_d2f
 1096              	.LVL95:
ARM GAS  /tmp/ccQMMJ7a.s 			page 31


 186:Core/Src/main.c **** 		sp.roll = M_PI * IMU_Angle[1]/180;
 1097              		.loc 1 186 12 view .LVU255
 1098 037c CDF86200 		str	r0, [sp, #98]	@ unaligned
 187:Core/Src/main.c ****     CDC_Transmit_FS((uint8_t *)&sp, sizeof(struct SendPacket));
 1099              		.loc 1 187 3 is_stmt 1 view .LVU256
 187:Core/Src/main.c ****     CDC_Transmit_FS((uint8_t *)&sp, sizeof(struct SendPacket));
 1100              		.loc 1 187 29 is_stmt 0 view .LVU257
 1101 0380 6868     		ldr	r0, [r5, #4]	@ float
 1102 0382 FFF7FEFF 		bl	__aeabi_f2d
 1103              	.LVL96:
 187:Core/Src/main.c ****     CDC_Transmit_FS((uint8_t *)&sp, sizeof(struct SendPacket));
 1104              		.loc 1 187 18 view .LVU258
 1105 0386 1EA3     		adr	r3, .L43
 1106 0388 D3E90023 		ldrd	r2, [r3]
 1107 038c FFF7FEFF 		bl	__aeabi_dmul
 1108              	.LVL97:
 187:Core/Src/main.c ****     CDC_Transmit_FS((uint8_t *)&sp, sizeof(struct SendPacket));
 1109              		.loc 1 187 32 view .LVU259
 1110 0390 0022     		movs	r2, #0
 1111 0392 274B     		ldr	r3, .L43+48
 1112 0394 FFF7FEFF 		bl	__aeabi_ddiv
 1113              	.LVL98:
 1114 0398 FFF7FEFF 		bl	__aeabi_d2f
 1115              	.LVL99:
 187:Core/Src/main.c ****     CDC_Transmit_FS((uint8_t *)&sp, sizeof(struct SendPacket));
 1116              		.loc 1 187 11 view .LVU260
 1117 039c CDF85E00 		str	r0, [sp, #94]	@ unaligned
 188:Core/Src/main.c **** 
 1118              		.loc 1 188 5 is_stmt 1 view .LVU261
 1119 03a0 1C21     		movs	r1, #28
 1120 03a2 17A8     		add	r0, sp, #92
 1121 03a4 FFF7FEFF 		bl	CDC_Transmit_FS
 1122              	.LVL100:
 195:Core/Src/main.c **** 				ABS_Gimbal_angle[0] = 0;
 1123              		.loc 1 195 3 view .LVU262
 195:Core/Src/main.c **** 				ABS_Gimbal_angle[0] = 0;
 1124              		.loc 1 195 22 is_stmt 0 view .LVU263
 1125 03a8 234B     		ldr	r3, .L43+56
 1126 03aa D3ED007A 		vldr.32	s15, [r3]
 195:Core/Src/main.c **** 				ABS_Gimbal_angle[0] = 0;
 1127              		.loc 1 195 5 view .LVU264
 1128 03ae 9FED237A 		vldr.32	s14, .L43+60
 1129 03b2 F4EEC77A 		vcmpe.f32	s15, s14
 1130 03b6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1131 03ba FFF62BAF 		blt	.L38
 196:Core/Src/main.c **** 		else if(ABS_Gimbal_angle <= 0)
 1132              		.loc 1 196 5 is_stmt 1 view .LVU265
 196:Core/Src/main.c **** 		else if(ABS_Gimbal_angle <= 0)
 1133              		.loc 1 196 25 is_stmt 0 view .LVU266
 1134 03be 0022     		movs	r2, #0
 1135 03c0 1A60     		str	r2, [r3]	@ float
 204:Core/Src/main.c **** 				ABS_Gimbal_angle[0]= yaw /(2*M_PI) *8192;
 1136              		.loc 1 204 3 is_stmt 1 view .LVU267
 204:Core/Src/main.c **** 				ABS_Gimbal_angle[0]= yaw /(2*M_PI) *8192;
 1137              		.loc 1 204 5 is_stmt 0 view .LVU268
 1138 03c2 002C     		cmp	r4, #0
 1139 03c4 3FF42DAF 		beq	.L33
ARM GAS  /tmp/ccQMMJ7a.s 			page 32


 1140              	.LVL101:
 1141              	.L32:
 205:Core/Src/main.c **** 		}
 1142              		.loc 1 205 5 is_stmt 1 view .LVU269
 205:Core/Src/main.c **** 		}
 1143              		.loc 1 205 30 is_stmt 0 view .LVU270
 1144 03c8 18EE900A 		vmov	r0, s17
 1145 03cc FFF7FEFF 		bl	__aeabi_f2d
 1146              	.LVL102:
 1147 03d0 0DA3     		adr	r3, .L43+8
 1148 03d2 D3E90023 		ldrd	r2, [r3]
 1149 03d6 FFF7FEFF 		bl	__aeabi_ddiv
 1150              	.LVL103:
 205:Core/Src/main.c **** 		}
 1151              		.loc 1 205 40 view .LVU271
 1152 03da 0022     		movs	r2, #0
 1153 03dc 184B     		ldr	r3, .L43+64
 1154 03de FFF7FEFF 		bl	__aeabi_dmul
 1155              	.LVL104:
 1156 03e2 FFF7FEFF 		bl	__aeabi_d2f
 1157              	.LVL105:
 205:Core/Src/main.c **** 		}
 1158              		.loc 1 205 24 view .LVU272
 1159 03e6 144B     		ldr	r3, .L43+56
 1160 03e8 1860     		str	r0, [r3]	@ float
 1161 03ea 1AE7     		b	.L33
 1162              	.LVL106:
 1163              	.L40:
 199:Core/Src/main.c **** 				nan_f = 1;
 1164              		.loc 1 199 38 discriminator 1 view .LVU273
 1165 03ec 24B9     		cbnz	r4, .L36
 200:Core/Src/main.c **** 				ABS_Gimbal_angle[0] = 7500;
 1166              		.loc 1 200 5 is_stmt 1 view .LVU274
 1167              	.LVL107:
 201:Core/Src/main.c **** 		} else nan_f =0;
 1168              		.loc 1 201 5 view .LVU275
 201:Core/Src/main.c **** 		} else nan_f =0;
 1169              		.loc 1 201 25 is_stmt 0 view .LVU276
 1170 03ee 124B     		ldr	r3, .L43+56
 1171 03f0 144A     		ldr	r2, .L43+68
 1172 03f2 1A60     		str	r2, [r3]	@ float
 204:Core/Src/main.c **** 				ABS_Gimbal_angle[0]= yaw /(2*M_PI) *8192;
 1173              		.loc 1 204 3 is_stmt 1 view .LVU277
 200:Core/Src/main.c **** 				ABS_Gimbal_angle[0] = 7500;
 1174              		.loc 1 200 11 is_stmt 0 view .LVU278
 1175 03f4 0124     		movs	r4, #1
 1176 03f6 E7E7     		b	.L32
 1177              	.LVL108:
 1178              	.L36:
 202:Core/Src/main.c **** 
 1179              		.loc 1 202 16 view .LVU279
 1180 03f8 0024     		movs	r4, #0
 1181              	.LVL109:
 202:Core/Src/main.c **** 
 1182              		.loc 1 202 16 view .LVU280
 1183 03fa 12E7     		b	.L33
 1184              	.L44:
ARM GAS  /tmp/ccQMMJ7a.s 			page 33


 1185 03fc AFF30080 		.align	3
 1186              	.L43:
 1187 0400 182D4454 		.word	1413754136
 1188 0404 FB210940 		.word	1074340347
 1189 0408 182D4454 		.word	1413754136
 1190 040c FB211940 		.word	1075388923
 1191 0410 00000000 		.word	i
 1192 0414 00000000 		.word	j
 1193 0418 00000000 		.word	USBD_Interface_fops_FS
 1194 041c 00000000 		.word	buf_r
 1195 0420 24000000 		.word	.LC1
 1196 0424 00000000 		.word	huart1
 1197 0428 00000000 		.word	IMU_Angle
 1198 042c 0000B442 		.word	1119092736
 1199 0430 00806640 		.word	1080459264
 1200 0434 00003443 		.word	1127481344
 1201 0438 00000000 		.word	ABS_Gimbal_angle
 1202 043c 00F8FF45 		.word	1174403072
 1203 0440 0000C040 		.word	1086324736
 1204 0444 0060EA45 		.word	1172987904
 1205              	.LBE10:
 1206              		.cfi_endproc
 1207              	.LFE137:
 1209              		.global	buf_r
 1210              		.section	.bss.buf_r,"aw",%nobits
 1211              		.align	2
 1214              	buf_r:
 1215 0000 00000000 		.space	256
 1215      00000000 
 1215      00000000 
 1215      00000000 
 1215      00000000 
 1216              		.global	ReceiveBuffer
 1217              		.section	.bss.ReceiveBuffer,"aw",%nobits
 1218              		.align	2
 1221              	ReceiveBuffer:
 1222 0000 00000000 		.space	6
 1222      0000
 1223              		.text
 1224              	.Letext0:
 1225              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1226              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1227              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1228              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1229              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1230              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1231              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1232              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1233              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 1234              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1235              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1236              		.file 14 "Core/Inc/can.h"
 1237              		.file 15 "Core/Inc/i2c.h"
 1238              		.file 16 "Core/Inc/pid.h"
 1239              		.file 17 "/usr/lib/gcc/arm-none-eabi/13.2.0/include/stddef.h"
 1240              		.file 18 "/usr/arm-none-eabi/include/sys/_types.h"
 1241              		.file 19 "/usr/arm-none-eabi/include/sys/reent.h"
ARM GAS  /tmp/ccQMMJ7a.s 			page 34


 1242              		.file 20 "/usr/arm-none-eabi/include/sys/lock.h"
 1243              		.file 21 "/usr/arm-none-eabi/include/stdio.h"
 1244              		.file 22 "Core/Inc/pid_control_tuning.h"
 1245              		.file 23 "Core/Inc/usart.h"
 1246              		.file 24 "Core/Inc/package.h"
 1247              		.file 25 "Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h"
 1248              		.file 26 "USB_DEVICE/App/usbd_cdc_if.h"
 1249              		.file 27 "/usr/arm-none-eabi/include/math.h"
 1250              		.file 28 "Core/Inc/com.h"
 1251              		.file 29 "Core/Inc/bsp_can.h"
 1252              		.file 30 "USB_DEVICE/App/usb_device.h"
 1253              		.file 31 "Core/Inc/gpio.h"
 1254              		.file 32 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1255              		.file 33 "<built-in>"
ARM GAS  /tmp/ccQMMJ7a.s 			page 35


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccQMMJ7a.s:23     .text.rc_norm:00000000 $t
     /tmp/ccQMMJ7a.s:29     .text.rc_norm:00000000 rc_norm
     /tmp/ccQMMJ7a.s:98     .text.rc_mul:00000000 $t
     /tmp/ccQMMJ7a.s:104    .text.rc_mul:00000000 rc_mul
     /tmp/ccQMMJ7a.s:160    .text.fputc:00000000 $t
     /tmp/ccQMMJ7a.s:166    .text.fputc:00000000 fputc
     /tmp/ccQMMJ7a.s:204    .text.fputc:0000001c $d
     /tmp/ccQMMJ7a.s:209    .text.fgetc:00000000 $t
     /tmp/ccQMMJ7a.s:215    .text.fgetc:00000000 fgetc
     /tmp/ccQMMJ7a.s:254    .text.fgetc:00000024 $d
     /tmp/ccQMMJ7a.s:259    .text.HAL_I2C_SlaveRxCpltCallback:00000000 $t
     /tmp/ccQMMJ7a.s:265    .text.HAL_I2C_SlaveRxCpltCallback:00000000 HAL_I2C_SlaveRxCpltCallback
     /tmp/ccQMMJ7a.s:385    .text.HAL_I2C_SlaveRxCpltCallback:000000a0 $d
     /tmp/ccQMMJ7a.s:1221   .bss.ReceiveBuffer:00000000 ReceiveBuffer
     /tmp/ccQMMJ7a.s:394    .text.Error_Handler:00000000 $t
     /tmp/ccQMMJ7a.s:400    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccQMMJ7a.s:432    .text.SystemClock_Config:00000000 $t
     /tmp/ccQMMJ7a.s:438    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccQMMJ7a.s:586    .text.SystemClock_Config:000000a0 $d
     /tmp/ccQMMJ7a.s:592    .rodata.main.str1.4:00000000 $d
     /tmp/ccQMMJ7a.s:604    .text.main:00000000 $t
     /tmp/ccQMMJ7a.s:610    .text.main:00000000 main
     /tmp/ccQMMJ7a.s:866    .text.main:000001c4 $d
     /tmp/ccQMMJ7a.s:892    .text.main:00000214 $t
     /tmp/ccQMMJ7a.s:1187   .text.main:00000400 $d
     /tmp/ccQMMJ7a.s:1214   .bss.buf_r:00000000 buf_r
     /tmp/ccQMMJ7a.s:1211   .bss.buf_r:00000000 $d
     /tmp/ccQMMJ7a.s:1218   .bss.ReceiveBuffer:00000000 $d

UNDEFINED SYMBOLS
__aeabi_dmul
__aeabi_dadd
sqrt
HAL_UART_Transmit
huart1
HAL_UART_Receive
HAL_I2C_Slave_Receive_IT
IMU_Angle_Raw
IMU_Angle
hi2c2
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_f2d
__aeabi_d2f
__aeabi_ddiv
__aeabi_d2iz
HAL_Init
MX_GPIO_Init
MX_CAN1_Init
MX_I2C2_Init
MX_USART1_UART_Init
MX_USB_DEVICE_Init
HAL_CAN_Start
my_can_filter_init_recv_all
ARM GAS  /tmp/ccQMMJ7a.s 			page 36


HAL_CAN_ActivateNotification
pid_init
cprintf
hcan1
angle_pid
abs_pid
motor_pid
Abs_angle_control_loop
fromVector
atan
asin
CDC_Transmit_FS
i
j
USBD_Interface_fops_FS
ABS_Gimbal_angle
